version: 2
jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: sudo npm install -global sfdx-cli
      - run:
          name: Create keys directory
          command: mkdir keys
      - run:
          name: Retrieve a key
          command: echo $SFDC_SERVER_KEY | base64 -d > keys/server.key
      - run:
          name: Authenticate DevHub
          command: sfdx force:auth:jwt:grant --clientid $SFDC_PROD_CLIENTID --jwtkeyfile keys/server.key --username $SFDC_PROD_USER --setdefaultdevhubusername -a DevHub
      - run:
          name: Create a scratch org
          command: sfdx force:org:create -f config/project-scratch-def.json -a ${CIRCLE_BRANCH} -ss
      - run:
          name: push source to scratch org
          command: sfdx force:source:push -u ${CIRCLE_BRANCH}
      - run:
          name: Validate Components & Run Tests
          command: sfdx force:apex:test:run --testlevel RunLocalTests --outputdir test-results --resultformat tap --targetusername ${CIRCLE_BRANCH}
      - store_test_results:
          path: test-results
      #- run:
      #    name: Create Unlocked Package
      #    command: sfdx force:package:create  -n $PACKAGE_NAME -t Unlocked -r force-app
      # - run:
      #    name: Create Version of Unlocked Package
      #    command: sfdx force:package:version:create --package $PACKAGE_NAME --definitionfile sfdx-project.json --wait 15 -x --json
      #- run:
      #    name: Install Unlocked Package in a scratch org 
      #    command: sfdx force:package:install --package $PACKAGE_NAME -u ${CIRCLE_BRANCH}
deploy-prod:
    docker:
    - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: . build/install.sh
      - run:
          name: Login to Production
          command: . build/setup-prod.sh
      - run:
          name: Deploy to Production
          command: . build/deploy-prod.sh
workflows:
  version: 2
  validate:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
      - deploy-prod:
          filters:
            branches:
              only:
                - master
